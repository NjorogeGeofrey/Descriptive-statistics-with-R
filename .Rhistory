data(mtcars)
str(mtcars)
dim(mtcars)
names(mtcars)
head(mtcars, n=5)
##descriptive statistics tends to describe, summarize and present a given data
#measure of central tendancy and measure of dispersion
#measure of central tendancy
#mean
mean(mtcars)
##descriptive statistics tends to describe, summarize and present a given data
#measure of central tendancy and measure of dispersion
#measure of central tendancy
#mean
mean(mtcars$mpg, na.rm = TRUE)
(sum(mtcars$mpg)/length(mtcars$mpg))
#median
median(mtcars$mpg)
unique(mtcars$mpg)
length(unique(mtcars$mpg))
dim(mtcars)
#mode
get_mode <- function(x) {
unique_x <- unique(x)
unique_x[which.max(tabulate(match(x, unique_x)))]
}
mode_value <- get_mode(mtcars$mpg)
mode_value
g <- c(1, 1, 2, 2, 5, 8, 7)
unique(g)
#mode_2
tab <- table(mtcars$mpg.Length) # number of occurrences for each unique value
sort(tab, decreasing = TRUE) # sort highest to lowest
tab

#mode
Unique <- table(mtcars$mpg) # number of occurrences for each unique value
mode <- sort(Unique, decreasing = TRUE) # sort highest to lowest
print(mode)
mode[which.max(mode)]
#median
median(mtcars$mpg)
#maximum
max(mtcars$mpg)
min(mtcars$mpg)
#range
range(mtcars$mpg)
#create a function
get_range <- function(x){
range_1<- max(x)-min(x)
return(range_1)
}
get_range(mtcars$mpg)
#quantile
quantile(mtcars$mpg, 0.5)
boxplot(mtcars$mpg)
#measures of dispersion
#variance
var(mtcars$mpg)
#sd
sd(mtcars$mpg)
return(varian)
variance <- function(x) {
SUM = sum(((x)-(mean(x)))^2)
N =length(x) - 1
varian = SUM/N
return(varian)
}
variance(mtcars$mpg)
#summary
summary(mtcars$mpg)
boxplot(mtcars$gear~mtcars$mpg)
View(mtcars)
descr(mtcars)
dfsummary(mtcars)
Name=C("Njoro","olal","Steve","Irene")
Name=c("Njoro","olal","Steve","Irene")
A=data.frame(Age,Height,Name)
Age=c(10,20,30,40)
Name=c("Njoro","Olal","Steve","Irene")
Heigjht=c(20,30,40,50)
A=data.frame(Age,Name,Heigjht)
A
str(A)
dim(A)
Weight=(10,15,30)
Weight=c(10,15,30)
Colour=c("red","blue","white")
Shape=c("oval","circle","round")
F=data.frame(Weight,Colour,Shape)
F
str(F)
dim(F)
data(mtcars)
data()
str(mtcars)
names(mtcars)
mtcars$mpg
mean(mtcars$mpg)
Gate_mode=table(mtcars$mpg)
Gate_mode
sort(Gate_mode,decreasing=TRUE)
median(mtcars$mpg)
range(mtcars$mpg)
quantile(mtcars$mpg,0.25)
quantile(mtcars$mpg,0.75)
range=function(x){range=max(x)-min(x)return(range)}
#create a function
get_range <- function(x){
range_1<- max(x)-min(x)
return(range_1)
}
range=function(x){}
range=function(x){range=max(x)-min(x)}
return(range)
range=function(x){range=max(x)-min()
return(range)}
range(mtcars$mpg)
range=function(x){range=max(x)-min(x)
return(range)}
range(mtcars$mpg)
summary(mtcars$mpg)
summary(mtcars)
datav <- iris
view(datav)
View(datav)
hist(datav$Sepal.Length)
shapiro.test(datav$Sepal.Length)
# Draw points on the qq-plot:
qqnorm(dat$Sepal.Length)
# Draw points on the qq-plot:
qqnorm(datav$Sepal.Length)
# Draw the reference line:
qqline(dat$Sepal.Length)
# Draw the reference line:
qqline(datav$Sepal.Length)
# percentages by row:
round(prop.table(table(datav$Species, dat$size), 1), 2)
# percentages by row:
round(prop.table(table(datav$Species, datav$size), 1), 2)
# percentages by row:
datav$size <- ifelse(datav$Sepal.Length < median(datav$Sepal.Length),
"small", "big")
table(datav$Species, datav$size)
round(prop.table(table(datav$Species, datav$size), 1), 2)
round(prop.table(table(datav$Species, datav$size), 2), 2)
round(prop.table(table(datav$Species, datav$size), 2), 2) * 100
mosaicplot(table(dat$Species, dat$size),
color = TRUE,
xlab = "Species", # label for x-axis
ylab = "Size" # label for y-axis
)
#Mosaic plot
mosaicplot(table(datav$Species, datav$size),
color = TRUE,
xlab = "Species", # label for x-axis
ylab = "Size" # label for y-axis
)
barplot(datav$size)
barplot(x=datav$size, y=datav$Sepal.Length)
table(datav$size)
barplot(table(datav$size))

boxplot(datav$Sepal.Length, datav$Species)
boxplot(datav$Sepal.Length~datav$Species)

